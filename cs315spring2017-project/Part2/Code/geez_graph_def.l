%{
	
	#include <stdlib.h>
	#include "y.tab.h"
	void yyerror(char *);

%}
MAIN Main
RANDEDGE \$\P
RANDVERT \#\P
COMMENT [//]+.*
DIGIT [0-9]
LOWERCASE [a-z]
UPPERCASE [A-Z]
LPARAN \(
RPARAN \)
LBRACKET \{
RBRACKET \}
LSQR \[
RSQL \]
SEMICOLON \;
COMMA \,
DOT \.
COLON \:
ASSIGNMENT =
COMPARISON ==
GREATER >
LESS <
GREATEREQUAL >=
LESSEQUAL <=
NOTEQUAL !=
NOT !
MULTIPLICATION \*
DIVISION \:\:
SUBTRACTION \-
ADDITION \+
CONCATENATION \&
ALTERNATION \|
REPETITION \^
OROR \|\|
ANDAND \&\&
STRCONCAT \~
IFSTM If
ELSE Else
BOOLEAN True|False
FOR For
WHILE While
STRING \".[^\"]*\"
ALPHANUMERIC ({LOWERCASE}|{UPPERCASE}|{DIGIT})
VARIABLE {LOWERCASE}{ALPHANUMERIC}*
PROPERTY Property
DIRECTEDGRAPH DirGraph
UNDIRECTEDGRAPH UndirGraph
VERTEX Vertex
EDGE Edge
INCLUDEPROPERTY IncludeProperty
CONNECT Connect
INTEGER [-+]?{DIGIT}+
FLOAT [-+]?{DIGIT}*(\.{DIGIT}+)
%option yylineno
%%
{COMMENT} return COMMENT;
{SEMICOLON} return SEMICOLON;
{COMMA} return COMMA;
{DOT} return DOT;
{COLON} return COLON;
{ASSIGNMENT} return ASSIGNMENT;
{COMPARISON} return ISEQUAL;
{GREATER} return GREATER;
{LESS} return LESS;
{GREATEREQUAL} return GREATEREQUAL;
{LESSEQUAL} return LESSEQUAL;
{NOTEQUAL} return NOTEQUAL;
{NOT} return NOT;
{VARIABLE} return VARIABLE;
{PROPERTY} return PROPERTY;
{DIRECTEDGRAPH} return DIRECTED;
{UNDIRECTEDGRAPH} return UNDIRECTED;
{VERTEX} return VERTEX;
{EDGE} return EDGE;
{INTEGER} return INTEGER;
{FLOAT}	return FLOAT;
{STRING} return STRING;
{ADDITION} return PLUS;
{SUBTRACTION} return MINUS;
{MULTIPLICATION} return MULTIPLICATION;
{LBRACKET} return LBRACKET;
{RBRACKET} return RBRACKET;
{LPARAN} return LPARAN;
{RPARAN} return RPARAN;
{CONCATENATION} return CONCATENATION;
{ALTERNATION} return ALTERNATION;
{DIVISION} return DIVISION;
{REPETITION} return REPETITION;
{IFSTM} return IFSTATEMENT;
{ELSE} return ELSESTATEMENT;
{FOR} return FOR;
{WHILE} return WHILE;
{LSQR} return SLBRACKET;
{RSQL} return SRBRACKET;
{MAIN} return MAIN;
{CONNECT} return CONNECT;
{INCLUDEPROPERTY} return INCLUDEPROPERTY;
[ \t\n\r] ;
. { yyerror("Invalid Character"); }
%%
int yywrap(void){
	return 1;
}
