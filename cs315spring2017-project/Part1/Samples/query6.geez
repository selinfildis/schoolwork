
//Predicates are designed to show the use of arithmetic expressions, 
//loops and built-in functions.
//x's value is recalculated and p1 is redefined 5 times.
for(int i = 0; i < 5; i++)
{
	x = i;
	Predicate p1 = #equals("Variable", x);
}
a = 5;
b = 8;
y = a * b;
//y's value is used for defining predicates after an arithmetic expression.
Predicate p2 = #lessThan("Variable", y);
//Use of lists and floats are shown as primitive/collection 
//types.
Predicate p3 = #equals("PrimeNumbers", [2, 3, 5, 7, 11, 13]);
Predicate p4 = #moreThan("Exam", 50.9995)
//Filters are generated by applying concatenation, alternation 
//and repetition on filters and predicates.
Filter f1 = (p1 & p4)^;
Filter f2 = (p2|p3)&p1;
Filter f3 = (#P & $P);
Query q1 = f1 & f3 & f1;
Query q2 = f3^
exec(arithmetic,q1);
exec(arithmetic,q2);
